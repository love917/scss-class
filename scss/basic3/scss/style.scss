//_var.scss파일과 _var2.scss에 동일한 이름의 변수가 있을 때
//@import "./partials/var";
//@import "./partials/var2";

//var2가 아래에 있으므로 var2의 변수가 사용된다.
//✨이러한 에러를 발생해주지 않는 문제를 해결하기 위해
//✨@use 와 @forward 방식이 생겨났다.
//@use 가 가장 많이 사용하는 방식이며
//@forward를 규모가 있는 프로젝트에서 사용한다.

//🤍@use 사용하기
//@use를 사용하면 같은 변수가 있을 때는 에러가 발생된다.
//@use "./partials/var";
//@use "./partials/var";

//🤍@use 사용방법
//@use "./partials/var";
//@use "./partials/var2";
//h1{color:var.$color-primary}
//h1{color:var2.$color-primary}
//앞에 파일명을 붙여주면 그 파일에 있는 변수를 사용함

//🤍별명 달기(파일명이 엄청 길때)
//@use "./partials/var" as v1;
//@use "./partials/var2" as v2;
//h1{color:v1.$color-primary}
//h1{color:v2.$color-primary}

//------------------------------------------------------

//💚@forward 사용방법
//여러 파일을 받아서 다시 전달해주는 역할을 한다.
//같은 변수가 있을 때 에러가 발생한다.
//@use "./partials/index";

//h1{color:index.$color-primary}

//💚마지막 파일의 이름을 생략했을 때 
//자동으로 변수를 검색하여 찾아준다.
//@use "./partials/"as king;
//@use "./partials/"as queen;

//h1{color: king.$color-main;}
//h1{color: queen.$color-primary;}

//💚* 을 붙이면 파일명을 생략할 수 있다. 변수명만 적용하면됨
@use "./partials/"as *;
h1{color: $color-main;}
h1{color: $color-primary;}
